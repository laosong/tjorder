<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.1.169:3306/tjdb?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="laosong"/>
        <property name="password" value="123456"/>
    </bean>

    <bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl"
                  value="jdbc:mysql://192.168.1.169:3306/tjdb?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="user" value="laosong"/>
        <property name="password" value="123456"/>
        <property name="initialPoolSize" value="10"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="30"/>
        <property name="acquireIncrement" value="2"/>
        <property name="maxIdleTime" value="10"/>
        <property name="maxStatements" value="0"/>
    </bean>

    <bean id="lazyDataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <ref local="c3p0DataSource"/>
        </property>
    </bean>

    <bean id="orderDataSource" class="com.brains.prj.tianjiu.order.common.OrderDataSource">
        <property name="defaultTargetDataSource" ref="lazyDataSource"></property>
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="com.brains.prj.tianjiu.order.service.AddressService.getAllCityInfo"
                       value-ref="myDataSource"/>
            </map>
        </property>
    </bean>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager1" class="com.brains.prj.tianjiu.order.common.OrderTransactionManager">
        <qualifier value="tm1"/>
        <property name="dataSource" ref="orderDataSource"/>
    </bean>

    <!-- enable autowire -->
    <context:annotation-config/>

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven transaction-manager="transactionManager1"/>

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="orderDataSource"/>
        <property name="typeAliasesPackage" value="com.brains.prj.tianjiu.order.domain"/>
        <property name="mapperLocations" value="classpath*:com/brains/prj/tianjiu/order/orm/mybatis/*.xml"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.brains.prj.tianjiu.order.orm"/>
    </bean>

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="com.brains.prj.tianjiu.order.service"/>

    <context:component-scan base-package="com.brains.prj.tianjiu.order.web"/>
</beans>
